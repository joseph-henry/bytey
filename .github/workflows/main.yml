name: make
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  commit-lint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: ensuring commit message is byte
        run: |
          #!/bin/bash
          set -euo pipefail ; IFS=$'\n\t'
          message=$(git log --format=%B -n 1 ${{ github.event.after }})
          echo "message: ${message}"
          echo "${message}" | grep "^byte$" &>/dev/null;
  build-unix:
    needs: commit-lint
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
      - name: "debug info"
        run: |
          echo "uname -a" ;  uname -a
          echo "env" ; env
          echo "pwd" ; pwd
          echo "ls -la" ; ls -la
      - name: "make"
        run:  |
          make
      - name: "run"
        run: |
          ./bytey | grep nom
          file ./bytey
      - name: "upload artifact"
        uses: actions/upload-artifact@v2
        with:
          name: bytey-${{ matrix.os }}
          path: bytey
  build-windows:
    needs: commit-lint
    strategy:
      matrix:
        os: [ windows-2022 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
      - name: "debug info"
        run: |
          echo "uname -a" ;  uname -a
          echo "env" ; env
          echo "pwd" ; pwd
          echo "dir" ; dir
      - name: "make"
        run:  |
          make
      - name: "file"
        run: |
          file ./bytey
      - name: "upload artifact"
        if: contains(matrix.os, 'windows')
        uses: actions/upload-artifact@v2
        with:
          name: byte-${{ matrix.os }}.exe
          path: bytey.exe
  run-unix:
    needs: build-unix
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: "download artifact"
        uses: actions/download-artifact@v2
        with:
          name: byte-${{ matrix.os }}
          path: .
      - name: "run"
        run: |
          chmod +x ./bytey
          ./bytey | grep nom
  run-windows:
    needs: build-windows
    strategy:
      matrix:
        os: [ windows-2022 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: "download artifact"
        uses: actions/download-artifact@v2
        with:
          name: bytey-${{ matrix.os }}.exe
          path: .
      - name: "run"
        run: |
          ./bytey | grep nom
  fuzz-linux:
    needs: run-unix
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: "download artifact"
        uses: actions/download-artifact@v2
        with:
          name: byte-${{ matrix.os }}
          path: .
      - name: "install zzuf"
        run: |
          sudo apt-get -y install zzuf
      - name: "run zzuf"
        run: |
          #!/bin/bash
          set -euo pipefail ; IFS=$'\n\t'
          chmod +x ./bytey
          zzuf -d -r0.001 -E/etc -E/usr/share file ./bytey
